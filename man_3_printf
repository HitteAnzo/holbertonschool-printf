.TH _PRINTF 24 "July 2024"  "HolbertonSchool Team project in "

.SH NAME

_printf

.SH SYNOPSIS

.B #include "main.h"
.PP
.B int _printf(const char *format, ...)
.BR "..." 

.B int _printf(const char *format, ...)
.B ...)

.SH DESCRIPTION

.PP

produce output to stdout according to a format described below similar to printf() function.

.SH OPTIONS
.RS
.nf
.B %c
Prints a single character.
.B %s
Prints a string. If the string is NULL, it prints "(null)". If the string is empty, it prints nothing.
.B %%
Prints a single percentage sign to the stream.
.B %i
Prints a signed decimal integer.
.B %d
Prints a signed decimal integer.
.RE

.SH EXAMPLES

.B With main.c we can test our functions

{
	int len;
	int len2;
	unsigned int ui;
	void *addr;

	len = _printf("Let's try to printf a simple sentence.\n");
	len2 = printf("Let's try to printf a simple sentence.\n");
	ui = (unsigned int)INT_MAX + 1024;
	addr = (void *)0x7ffe637541f0;
	_printf("Length:[%d, %i]\n", len, len);
	printf("Length:[%d, %i]\n", len2, len2);
	_printf("Negative:[%d]\n", -762534);
	printf("Negative:[%d]\n", -762534);
	_printf("Unsigned:[%u]\n", ui);
	printf("Unsigned:[%u]\n", ui);
	_printf("Unsigned octal:[%o]\n", ui);
	printf("Unsigned octal:[%o]\n", ui);
	_printf("Unsigned hexadecimal:[%x, %X]\n", ui, ui);
	printf("Unsigned hexadecimal:[%x, %X]\n", ui, ui);
	_printf("Character:[%c]\n", 'H');
	printf("Character:[%c]\n", 'H');
	_printf("String:[%s]\n", "I am a string !");
	printf("String:[%s]\n", "I am a string !");
	_printf("Address:[%p]\n", addr);
	printf("Address:[%p]\n", addr);
	len = _printf("Percent:[%%]\n");
	len2 = printf("Percent:[%%]\n");
	_printf("Len:[%d]\n", len);
	printf("Len:[%d]\n", len2);
	_printf("Unknown:[%r]\n");
	printf("Unknown:[%r]\n");
	return (0);
}

.SH AUTHORS

Hitte Anzo, Chatillon Jordan.